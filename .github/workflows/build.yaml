---

name: Build
on:
  push:
    branches:
      - main

jobs:
  build-server:
    name: Build server
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/ded1rk/diyivi-server

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: ./infra/server/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=diyivi-server
          cache-to: type=gha,mode=max,scope=diyivi-server

  build-nginx:
    name: Build nginx
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/ded1rk/diyivi-nginx

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: ./infra/nginx/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=diyivi-nginx
          cache-to: type=gha,mode=max,scope=diyivi-nginx

  build-client-zip:
    name: Build client zip
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - run: npm install
      - run: npm run build 

      - name: Upload built client
        uses: actions/upload-artifact@v4
        with:
          name: client-dist
          path: |
            client/dist