# The nginx base docker image will envsubst environment
# variables into this template configuration at runtime.

tcp_nopush  on;
tcp_nodelay on;
sendfile    on;

http2 on;

ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;

ssl_session_timeout 1d;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off;

ssl_stapling on;
ssl_stapling_verify on;

gzip on;
gzip_proxied any;
gzip_types application/json;
gzip_vary on;

proxy_redirect          off;
proxy_connect_timeout   60s;
proxy_send_timeout      60s;
proxy_read_timeout      60s;
proxy_http_version      1.1;

proxy_set_header        Host $host;
proxy_set_header        X-Real-IP $remote_addr;
proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header        X-Forwarded-Proto $scheme;
proxy_set_header        X-Forwarded-Host $host;
proxy_set_header        X-Forwarded-Server $host;

client_max_body_size 10m;

server_tokens off;


server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name ${DOMAIN};

    ssl_certificate         /etc/letsencrypt/live/diyivi/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/diyivi/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/diyivi/chain.pem;

    ssl_dhparam             /etc/letsencrypt/dhparams/dhparam.pem;

    location /api/ {
        proxy_pass          http://server:8000/api/;
    }

    location /yivi/ {
        proxy_pass          http://irma:8088/;
    }

    location / {
        root /client/dist/;
        index index.html;

        try_files $uri $uri/ /index.html;
    }
}

server {
    # Drop any request that does not match any of the other server names.
    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;
    ssl_reject_handshake on;

    access_log off;
}

